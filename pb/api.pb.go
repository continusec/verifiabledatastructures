//
//
//Copyright 2017 Continusec Pty Ltd
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: api.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogType int32

const (
	LogType_STRUCT_TYPE_LOG          LogType = 0 // default to user log
	LogType_STRUCT_TYPE_MUTATION_LOG LogType = 1
	LogType_STRUCT_TYPE_TREEHEAD_LOG LogType = 2
)

// Enum value maps for LogType.
var (
	LogType_name = map[int32]string{
		0: "STRUCT_TYPE_LOG",
		1: "STRUCT_TYPE_MUTATION_LOG",
		2: "STRUCT_TYPE_TREEHEAD_LOG",
	}
	LogType_value = map[string]int32{
		"STRUCT_TYPE_LOG":          0,
		"STRUCT_TYPE_MUTATION_LOG": 1,
		"STRUCT_TYPE_TREEHEAD_LOG": 2,
	}
)

func (x LogType) Enum() *LogType {
	p := new(LogType)
	*p = x
	return p
}

func (x LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (LogType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogType.Descriptor instead.
func (LogType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type DataFormat int32

const (
	DataFormat_UNSPECIFIED DataFormat = 0
	DataFormat_JSON        DataFormat = 1
)

// Enum value maps for DataFormat.
var (
	DataFormat_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "JSON",
	}
	DataFormat_value = map[string]int32{
		"UNSPECIFIED": 0,
		"JSON":        1,
	}
)

func (x DataFormat) Enum() *DataFormat {
	p := new(DataFormat)
	*p = x
	return p
}

func (x DataFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (DataFormat) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x DataFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataFormat.Descriptor instead.
func (DataFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type AccountRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRef) Reset() {
	*x = AccountRef{}
	mi := &file_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRef) ProtoMessage() {}

func (x *AccountRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRef.ProtoReflect.Descriptor instead.
func (*AccountRef) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *AccountRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountRef) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type LogRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *AccountRef            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	LogType       LogType                `protobuf:"varint,2,opt,name=log_type,json=logType,proto3,enum=com.continusec.verifiabledatastructures.api.LogType" json:"log_type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRef) Reset() {
	*x = LogRef{}
	mi := &file_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRef) ProtoMessage() {}

func (x *LogRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRef.ProtoReflect.Descriptor instead.
func (*LogRef) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *LogRef) GetAccount() *AccountRef {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *LogRef) GetLogType() LogType {
	if x != nil {
		return x.LogType
	}
	return LogType_STRUCT_TYPE_LOG
}

func (x *LogRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MapRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *AccountRef            `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapRef) Reset() {
	*x = MapRef{}
	mi := &file_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRef) ProtoMessage() {}

func (x *MapRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRef.ProtoReflect.Descriptor instead.
func (*MapRef) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *MapRef) GetAccount() *AccountRef {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *MapRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LogTreeHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *LogRef                `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	TreeSize      int64                  `protobuf:"varint,2,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogTreeHashRequest) Reset() {
	*x = LogTreeHashRequest{}
	mi := &file_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogTreeHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogTreeHashRequest) ProtoMessage() {}

func (x *LogTreeHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogTreeHashRequest.ProtoReflect.Descriptor instead.
func (*LogTreeHashRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *LogTreeHashRequest) GetLog() *LogRef {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogTreeHashRequest) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

type LogTreeHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeSize      int64                  `protobuf:"varint,1,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	RootHash      []byte                 `protobuf:"bytes,2,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogTreeHashResponse) Reset() {
	*x = LogTreeHashResponse{}
	mi := &file_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogTreeHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogTreeHashResponse) ProtoMessage() {}

func (x *LogTreeHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogTreeHashResponse.ProtoReflect.Descriptor instead.
func (*LogTreeHashResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *LogTreeHashResponse) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *LogTreeHashResponse) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

type MapTreeHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Map           *MapRef                `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	TreeSize      int64                  `protobuf:"varint,2,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapTreeHashRequest) Reset() {
	*x = MapTreeHashRequest{}
	mi := &file_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapTreeHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTreeHashRequest) ProtoMessage() {}

func (x *MapTreeHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTreeHashRequest.ProtoReflect.Descriptor instead.
func (*MapTreeHashRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *MapTreeHashRequest) GetMap() *MapRef {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *MapTreeHashRequest) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

type MapTreeHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootHash      []byte                 `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	MutationLog   *LogTreeHashResponse   `protobuf:"bytes,2,opt,name=mutation_log,json=mutationLog,proto3" json:"mutation_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapTreeHashResponse) Reset() {
	*x = MapTreeHashResponse{}
	mi := &file_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapTreeHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTreeHashResponse) ProtoMessage() {}

func (x *MapTreeHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTreeHashResponse.ProtoReflect.Descriptor instead.
func (*MapTreeHashResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *MapTreeHashResponse) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *MapTreeHashResponse) GetMutationLog() *LogTreeHashResponse {
	if x != nil {
		return x.MutationLog
	}
	return nil
}

type LogInclusionProofRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Log      *LogRef                `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	TreeSize int64                  `protobuf:"varint,2,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"` // may be 0 (HEAD)
	// One of:
	MtlHash       []byte `protobuf:"bytes,3,opt,name=mtl_hash,json=mtlHash,proto3" json:"mtl_hash,omitempty"`        // used, if not nil
	LeafIndex     int64  `protobuf:"varint,4,opt,name=leaf_index,json=leafIndex,proto3" json:"leaf_index,omitempty"` // used if mtl_hash is nil
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogInclusionProofRequest) Reset() {
	*x = LogInclusionProofRequest{}
	mi := &file_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogInclusionProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInclusionProofRequest) ProtoMessage() {}

func (x *LogInclusionProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInclusionProofRequest.ProtoReflect.Descriptor instead.
func (*LogInclusionProofRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *LogInclusionProofRequest) GetLog() *LogRef {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogInclusionProofRequest) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *LogInclusionProofRequest) GetMtlHash() []byte {
	if x != nil {
		return x.MtlHash
	}
	return nil
}

func (x *LogInclusionProofRequest) GetLeafIndex() int64 {
	if x != nil {
		return x.LeafIndex
	}
	return 0
}

type LogInclusionProofResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeSize      int64                  `protobuf:"varint,1,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	LeafIndex     int64                  `protobuf:"varint,2,opt,name=leaf_index,json=leafIndex,proto3" json:"leaf_index,omitempty"`
	AuditPath     [][]byte               `protobuf:"bytes,3,rep,name=audit_path,json=auditPath,proto3" json:"audit_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogInclusionProofResponse) Reset() {
	*x = LogInclusionProofResponse{}
	mi := &file_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogInclusionProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInclusionProofResponse) ProtoMessage() {}

func (x *LogInclusionProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInclusionProofResponse.ProtoReflect.Descriptor instead.
func (*LogInclusionProofResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *LogInclusionProofResponse) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *LogInclusionProofResponse) GetLeafIndex() int64 {
	if x != nil {
		return x.LeafIndex
	}
	return 0
}

func (x *LogInclusionProofResponse) GetAuditPath() [][]byte {
	if x != nil {
		return x.AuditPath
	}
	return nil
}

type LogConsistencyProofRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *LogRef                `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	FromSize      int64                  `protobuf:"varint,2,opt,name=from_size,json=fromSize,proto3" json:"from_size,omitempty"`
	TreeSize      int64                  `protobuf:"varint,3,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"` // may be 0 (HEAD)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogConsistencyProofRequest) Reset() {
	*x = LogConsistencyProofRequest{}
	mi := &file_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogConsistencyProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogConsistencyProofRequest) ProtoMessage() {}

func (x *LogConsistencyProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogConsistencyProofRequest.ProtoReflect.Descriptor instead.
func (*LogConsistencyProofRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *LogConsistencyProofRequest) GetLog() *LogRef {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogConsistencyProofRequest) GetFromSize() int64 {
	if x != nil {
		return x.FromSize
	}
	return 0
}

func (x *LogConsistencyProofRequest) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

type LogConsistencyProofResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSize      int64                  `protobuf:"varint,1,opt,name=from_size,json=fromSize,proto3" json:"from_size,omitempty"`
	TreeSize      int64                  `protobuf:"varint,2,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	AuditPath     [][]byte               `protobuf:"bytes,3,rep,name=audit_path,json=auditPath,proto3" json:"audit_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogConsistencyProofResponse) Reset() {
	*x = LogConsistencyProofResponse{}
	mi := &file_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogConsistencyProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogConsistencyProofResponse) ProtoMessage() {}

func (x *LogConsistencyProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogConsistencyProofResponse.ProtoReflect.Descriptor instead.
func (*LogConsistencyProofResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *LogConsistencyProofResponse) GetFromSize() int64 {
	if x != nil {
		return x.FromSize
	}
	return 0
}

func (x *LogConsistencyProofResponse) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *LogConsistencyProofResponse) GetAuditPath() [][]byte {
	if x != nil {
		return x.AuditPath
	}
	return nil
}

type LeafData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeafInput     []byte                 `protobuf:"bytes,1,opt,name=leaf_input,json=leafInput,proto3" json:"leaf_input,omitempty"`
	ExtraData     []byte                 `protobuf:"bytes,2,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`                                       // ignored by the server, returned to the user, who may have business logic to confirm that the leaf_input has been derived from this, e.g. objecthash
	Format        DataFormat             `protobuf:"varint,3,opt,name=format,proto3,enum=com.continusec.verifiabledatastructures.api.DataFormat" json:"format,omitempty"` // optional, if set, can define metadata about the format of the ExtraData. e.g. if set to JSON, fields will be filtered.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeafData) Reset() {
	*x = LeafData{}
	mi := &file_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeafData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafData) ProtoMessage() {}

func (x *LeafData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafData.ProtoReflect.Descriptor instead.
func (*LeafData) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *LeafData) GetLeafInput() []byte {
	if x != nil {
		return x.LeafInput
	}
	return nil
}

func (x *LeafData) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *LeafData) GetFormat() DataFormat {
	if x != nil {
		return x.Format
	}
	return DataFormat_UNSPECIFIED
}

type LogAddEntryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *LogRef                `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Value         *LeafData              `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogAddEntryRequest) Reset() {
	*x = LogAddEntryRequest{}
	mi := &file_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogAddEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAddEntryRequest) ProtoMessage() {}

func (x *LogAddEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAddEntryRequest.ProtoReflect.Descriptor instead.
func (*LogAddEntryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *LogAddEntryRequest) GetLog() *LogRef {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogAddEntryRequest) GetValue() *LeafData {
	if x != nil {
		return x.Value
	}
	return nil
}

type LogAddEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeafHash      []byte                 `protobuf:"bytes,1,opt,name=leaf_hash,json=leafHash,proto3" json:"leaf_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogAddEntryResponse) Reset() {
	*x = LogAddEntryResponse{}
	mi := &file_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogAddEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogAddEntryResponse) ProtoMessage() {}

func (x *LogAddEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogAddEntryResponse.ProtoReflect.Descriptor instead.
func (*LogAddEntryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *LogAddEntryResponse) GetLeafHash() []byte {
	if x != nil {
		return x.LeafHash
	}
	return nil
}

type MapSetValueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Map           *MapRef                `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	Mutation      *MapMutation           `protobuf:"bytes,2,opt,name=mutation,proto3" json:"mutation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapSetValueRequest) Reset() {
	*x = MapSetValueRequest{}
	mi := &file_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSetValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSetValueRequest) ProtoMessage() {}

func (x *MapSetValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSetValueRequest.ProtoReflect.Descriptor instead.
func (*MapSetValueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *MapSetValueRequest) GetMap() *MapRef {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *MapSetValueRequest) GetMutation() *MapMutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

type MapSetValueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeafHash      []byte                 `protobuf:"bytes,1,opt,name=leaf_hash,json=leafHash,proto3" json:"leaf_hash,omitempty"` // of mutation log entry
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapSetValueResponse) Reset() {
	*x = MapSetValueResponse{}
	mi := &file_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapSetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapSetValueResponse) ProtoMessage() {}

func (x *MapSetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapSetValueResponse.ProtoReflect.Descriptor instead.
func (*MapSetValueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *MapSetValueResponse) GetLeafHash() []byte {
	if x != nil {
		return x.LeafHash
	}
	return nil
}

type MapGetValueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Map           *MapRef                `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	TreeSize      int64                  `protobuf:"varint,2,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	Key           []byte                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapGetValueRequest) Reset() {
	*x = MapGetValueRequest{}
	mi := &file_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapGetValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapGetValueRequest) ProtoMessage() {}

func (x *MapGetValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapGetValueRequest.ProtoReflect.Descriptor instead.
func (*MapGetValueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *MapGetValueRequest) GetMap() *MapRef {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *MapGetValueRequest) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *MapGetValueRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type MapGetValueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeSize      int64                  `protobuf:"varint,1,opt,name=tree_size,json=treeSize,proto3" json:"tree_size,omitempty"`
	AuditPath     [][]byte               `protobuf:"bytes,2,rep,name=audit_path,json=auditPath,proto3" json:"audit_path,omitempty"` // up to 256 long. Consumers should substitute empties and missing for known defaults.
	Value         *LeafData              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapGetValueResponse) Reset() {
	*x = MapGetValueResponse{}
	mi := &file_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapGetValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapGetValueResponse) ProtoMessage() {}

func (x *MapGetValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapGetValueResponse.ProtoReflect.Descriptor instead.
func (*MapGetValueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *MapGetValueResponse) GetTreeSize() int64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *MapGetValueResponse) GetAuditPath() [][]byte {
	if x != nil {
		return x.AuditPath
	}
	return nil
}

func (x *MapGetValueResponse) GetValue() *LeafData {
	if x != nil {
		return x.Value
	}
	return nil
}

type LogFetchEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *LogRef                `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	First         int64                  `protobuf:"varint,2,opt,name=first,proto3" json:"first,omitempty"` // inclusive
	Last          int64                  `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`   // exclusive, may be HEAD(0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFetchEntriesRequest) Reset() {
	*x = LogFetchEntriesRequest{}
	mi := &file_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFetchEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFetchEntriesRequest) ProtoMessage() {}

func (x *LogFetchEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFetchEntriesRequest.ProtoReflect.Descriptor instead.
func (*LogFetchEntriesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *LogFetchEntriesRequest) GetLog() *LogRef {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *LogFetchEntriesRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *LogFetchEntriesRequest) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

type LogFetchEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*LeafData            `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogFetchEntriesResponse) Reset() {
	*x = LogFetchEntriesResponse{}
	mi := &file_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogFetchEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogFetchEntriesResponse) ProtoMessage() {}

func (x *LogFetchEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogFetchEntriesResponse.ProtoReflect.Descriptor instead.
func (*LogFetchEntriesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *LogFetchEntriesResponse) GetValues() []*LeafData {
	if x != nil {
		return x.Values
	}
	return nil
}

type MapMutation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Timestamp        string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Set by the server. RFC3339 - may not be applied in order. Added as a rough nonce.
	Action           string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`       // One of "set", "delete", "update"
	Key              []byte                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value            *LeafData              `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	PreviousLeafHash []byte                 `protobuf:"bytes,5,opt,name=previous_leaf_hash,json=previousLeafHash,proto3" json:"previous_leaf_hash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MapMutation) Reset() {
	*x = MapMutation{}
	mi := &file_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapMutation) ProtoMessage() {}

func (x *MapMutation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapMutation.ProtoReflect.Descriptor instead.
func (*MapMutation) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *MapMutation) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *MapMutation) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MapMutation) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MapMutation) GetValue() *LeafData {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MapMutation) GetPreviousLeafHash() []byte {
	if x != nil {
		return x.PreviousLeafHash
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

const file_api_proto_rawDesc = "" +
	"\n" +
	"\tapi.proto\x12+com.continusec.verifiabledatastructures.api\"5\n" +
	"\n" +
	"AccountRef\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\"\xc0\x01\n" +
	"\x06LogRef\x12Q\n" +
	"\aaccount\x18\x01 \x01(\v27.com.continusec.verifiabledatastructures.api.AccountRefR\aaccount\x12O\n" +
	"\blog_type\x18\x02 \x01(\x0e24.com.continusec.verifiabledatastructures.api.LogTypeR\alogType\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"o\n" +
	"\x06MapRef\x12Q\n" +
	"\aaccount\x18\x01 \x01(\v27.com.continusec.verifiabledatastructures.api.AccountRefR\aaccount\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"x\n" +
	"\x12LogTreeHashRequest\x12E\n" +
	"\x03log\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.LogRefR\x03log\x12\x1b\n" +
	"\ttree_size\x18\x02 \x01(\x03R\btreeSize\"O\n" +
	"\x13LogTreeHashResponse\x12\x1b\n" +
	"\ttree_size\x18\x01 \x01(\x03R\btreeSize\x12\x1b\n" +
	"\troot_hash\x18\x02 \x01(\fR\brootHash\"x\n" +
	"\x12MapTreeHashRequest\x12E\n" +
	"\x03map\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.MapRefR\x03map\x12\x1b\n" +
	"\ttree_size\x18\x02 \x01(\x03R\btreeSize\"\x97\x01\n" +
	"\x13MapTreeHashResponse\x12\x1b\n" +
	"\troot_hash\x18\x01 \x01(\fR\brootHash\x12c\n" +
	"\fmutation_log\x18\x02 \x01(\v2@.com.continusec.verifiabledatastructures.api.LogTreeHashResponseR\vmutationLog\"\xb8\x01\n" +
	"\x18LogInclusionProofRequest\x12E\n" +
	"\x03log\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.LogRefR\x03log\x12\x1b\n" +
	"\ttree_size\x18\x02 \x01(\x03R\btreeSize\x12\x19\n" +
	"\bmtl_hash\x18\x03 \x01(\fR\amtlHash\x12\x1d\n" +
	"\n" +
	"leaf_index\x18\x04 \x01(\x03R\tleafIndex\"v\n" +
	"\x19LogInclusionProofResponse\x12\x1b\n" +
	"\ttree_size\x18\x01 \x01(\x03R\btreeSize\x12\x1d\n" +
	"\n" +
	"leaf_index\x18\x02 \x01(\x03R\tleafIndex\x12\x1d\n" +
	"\n" +
	"audit_path\x18\x03 \x03(\fR\tauditPath\"\x9d\x01\n" +
	"\x1aLogConsistencyProofRequest\x12E\n" +
	"\x03log\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.LogRefR\x03log\x12\x1b\n" +
	"\tfrom_size\x18\x02 \x01(\x03R\bfromSize\x12\x1b\n" +
	"\ttree_size\x18\x03 \x01(\x03R\btreeSize\"v\n" +
	"\x1bLogConsistencyProofResponse\x12\x1b\n" +
	"\tfrom_size\x18\x01 \x01(\x03R\bfromSize\x12\x1b\n" +
	"\ttree_size\x18\x02 \x01(\x03R\btreeSize\x12\x1d\n" +
	"\n" +
	"audit_path\x18\x03 \x03(\fR\tauditPath\"\x99\x01\n" +
	"\bLeafData\x12\x1d\n" +
	"\n" +
	"leaf_input\x18\x01 \x01(\fR\tleafInput\x12\x1d\n" +
	"\n" +
	"extra_data\x18\x02 \x01(\fR\textraData\x12O\n" +
	"\x06format\x18\x03 \x01(\x0e27.com.continusec.verifiabledatastructures.api.DataFormatR\x06format\"\xa8\x01\n" +
	"\x12LogAddEntryRequest\x12E\n" +
	"\x03log\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.LogRefR\x03log\x12K\n" +
	"\x05value\x18\x02 \x01(\v25.com.continusec.verifiabledatastructures.api.LeafDataR\x05value\"2\n" +
	"\x13LogAddEntryResponse\x12\x1b\n" +
	"\tleaf_hash\x18\x01 \x01(\fR\bleafHash\"\xb1\x01\n" +
	"\x12MapSetValueRequest\x12E\n" +
	"\x03map\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.MapRefR\x03map\x12T\n" +
	"\bmutation\x18\x02 \x01(\v28.com.continusec.verifiabledatastructures.api.MapMutationR\bmutation\"2\n" +
	"\x13MapSetValueResponse\x12\x1b\n" +
	"\tleaf_hash\x18\x01 \x01(\fR\bleafHash\"\x8a\x01\n" +
	"\x12MapGetValueRequest\x12E\n" +
	"\x03map\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.MapRefR\x03map\x12\x1b\n" +
	"\ttree_size\x18\x02 \x01(\x03R\btreeSize\x12\x10\n" +
	"\x03key\x18\x03 \x01(\fR\x03key\"\x9e\x01\n" +
	"\x13MapGetValueResponse\x12\x1b\n" +
	"\ttree_size\x18\x01 \x01(\x03R\btreeSize\x12\x1d\n" +
	"\n" +
	"audit_path\x18\x02 \x03(\fR\tauditPath\x12K\n" +
	"\x05value\x18\x03 \x01(\v25.com.continusec.verifiabledatastructures.api.LeafDataR\x05value\"\x89\x01\n" +
	"\x16LogFetchEntriesRequest\x12E\n" +
	"\x03log\x18\x01 \x01(\v23.com.continusec.verifiabledatastructures.api.LogRefR\x03log\x12\x14\n" +
	"\x05first\x18\x02 \x01(\x03R\x05first\x12\x12\n" +
	"\x04last\x18\x03 \x01(\x03R\x04last\"h\n" +
	"\x17LogFetchEntriesResponse\x12M\n" +
	"\x06values\x18\x01 \x03(\v25.com.continusec.verifiabledatastructures.api.LeafDataR\x06values\"\xd0\x01\n" +
	"\vMapMutation\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12\x10\n" +
	"\x03key\x18\x03 \x01(\fR\x03key\x12K\n" +
	"\x05value\x18\x04 \x01(\v25.com.continusec.verifiabledatastructures.api.LeafDataR\x05value\x12,\n" +
	"\x12previous_leaf_hash\x18\x05 \x01(\fR\x10previousLeafHash*Z\n" +
	"\aLogType\x12\x13\n" +
	"\x0fSTRUCT_TYPE_LOG\x10\x00\x12\x1c\n" +
	"\x18STRUCT_TYPE_MUTATION_LOG\x10\x01\x12\x1c\n" +
	"\x18STRUCT_TYPE_TREEHEAD_LOG\x10\x02*'\n" +
	"\n" +
	"DataFormat\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04JSON\x10\x012\xff\t\n" +
	"\x1fVerifiableDataStructuresService\x12\x92\x01\n" +
	"\vLogAddEntry\x12?.com.continusec.verifiabledatastructures.api.LogAddEntryRequest\x1a@.com.continusec.verifiabledatastructures.api.LogAddEntryResponse\"\x00\x12\x9e\x01\n" +
	"\x0fLogFetchEntries\x12C.com.continusec.verifiabledatastructures.api.LogFetchEntriesRequest\x1aD.com.continusec.verifiabledatastructures.api.LogFetchEntriesResponse\"\x00\x12\x92\x01\n" +
	"\vLogTreeHash\x12?.com.continusec.verifiabledatastructures.api.LogTreeHashRequest\x1a@.com.continusec.verifiabledatastructures.api.LogTreeHashResponse\"\x00\x12\xa4\x01\n" +
	"\x11LogInclusionProof\x12E.com.continusec.verifiabledatastructures.api.LogInclusionProofRequest\x1aF.com.continusec.verifiabledatastructures.api.LogInclusionProofResponse\"\x00\x12\xaa\x01\n" +
	"\x13LogConsistencyProof\x12G.com.continusec.verifiabledatastructures.api.LogConsistencyProofRequest\x1aH.com.continusec.verifiabledatastructures.api.LogConsistencyProofResponse\"\x00\x12\x92\x01\n" +
	"\vMapSetValue\x12?.com.continusec.verifiabledatastructures.api.MapSetValueRequest\x1a@.com.continusec.verifiabledatastructures.api.MapSetValueResponse\"\x00\x12\x92\x01\n" +
	"\vMapGetValue\x12?.com.continusec.verifiabledatastructures.api.MapGetValueRequest\x1a@.com.continusec.verifiabledatastructures.api.MapGetValueResponse\"\x00\x12\x92\x01\n" +
	"\vMapTreeHash\x12?.com.continusec.verifiabledatastructures.api.MapTreeHashRequest\x1a@.com.continusec.verifiabledatastructures.api.MapTreeHashResponse\"\x00B3Z1github.com/continusec/verifiabledatastructures/pbb\x06proto3"

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData []byte
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)))
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_goTypes = []any{
	(LogType)(0),                        // 0: com.continusec.verifiabledatastructures.api.LogType
	(DataFormat)(0),                     // 1: com.continusec.verifiabledatastructures.api.DataFormat
	(*AccountRef)(nil),                  // 2: com.continusec.verifiabledatastructures.api.AccountRef
	(*LogRef)(nil),                      // 3: com.continusec.verifiabledatastructures.api.LogRef
	(*MapRef)(nil),                      // 4: com.continusec.verifiabledatastructures.api.MapRef
	(*LogTreeHashRequest)(nil),          // 5: com.continusec.verifiabledatastructures.api.LogTreeHashRequest
	(*LogTreeHashResponse)(nil),         // 6: com.continusec.verifiabledatastructures.api.LogTreeHashResponse
	(*MapTreeHashRequest)(nil),          // 7: com.continusec.verifiabledatastructures.api.MapTreeHashRequest
	(*MapTreeHashResponse)(nil),         // 8: com.continusec.verifiabledatastructures.api.MapTreeHashResponse
	(*LogInclusionProofRequest)(nil),    // 9: com.continusec.verifiabledatastructures.api.LogInclusionProofRequest
	(*LogInclusionProofResponse)(nil),   // 10: com.continusec.verifiabledatastructures.api.LogInclusionProofResponse
	(*LogConsistencyProofRequest)(nil),  // 11: com.continusec.verifiabledatastructures.api.LogConsistencyProofRequest
	(*LogConsistencyProofResponse)(nil), // 12: com.continusec.verifiabledatastructures.api.LogConsistencyProofResponse
	(*LeafData)(nil),                    // 13: com.continusec.verifiabledatastructures.api.LeafData
	(*LogAddEntryRequest)(nil),          // 14: com.continusec.verifiabledatastructures.api.LogAddEntryRequest
	(*LogAddEntryResponse)(nil),         // 15: com.continusec.verifiabledatastructures.api.LogAddEntryResponse
	(*MapSetValueRequest)(nil),          // 16: com.continusec.verifiabledatastructures.api.MapSetValueRequest
	(*MapSetValueResponse)(nil),         // 17: com.continusec.verifiabledatastructures.api.MapSetValueResponse
	(*MapGetValueRequest)(nil),          // 18: com.continusec.verifiabledatastructures.api.MapGetValueRequest
	(*MapGetValueResponse)(nil),         // 19: com.continusec.verifiabledatastructures.api.MapGetValueResponse
	(*LogFetchEntriesRequest)(nil),      // 20: com.continusec.verifiabledatastructures.api.LogFetchEntriesRequest
	(*LogFetchEntriesResponse)(nil),     // 21: com.continusec.verifiabledatastructures.api.LogFetchEntriesResponse
	(*MapMutation)(nil),                 // 22: com.continusec.verifiabledatastructures.api.MapMutation
}
var file_api_proto_depIdxs = []int32{
	2,  // 0: com.continusec.verifiabledatastructures.api.LogRef.account:type_name -> com.continusec.verifiabledatastructures.api.AccountRef
	0,  // 1: com.continusec.verifiabledatastructures.api.LogRef.log_type:type_name -> com.continusec.verifiabledatastructures.api.LogType
	2,  // 2: com.continusec.verifiabledatastructures.api.MapRef.account:type_name -> com.continusec.verifiabledatastructures.api.AccountRef
	3,  // 3: com.continusec.verifiabledatastructures.api.LogTreeHashRequest.log:type_name -> com.continusec.verifiabledatastructures.api.LogRef
	4,  // 4: com.continusec.verifiabledatastructures.api.MapTreeHashRequest.map:type_name -> com.continusec.verifiabledatastructures.api.MapRef
	6,  // 5: com.continusec.verifiabledatastructures.api.MapTreeHashResponse.mutation_log:type_name -> com.continusec.verifiabledatastructures.api.LogTreeHashResponse
	3,  // 6: com.continusec.verifiabledatastructures.api.LogInclusionProofRequest.log:type_name -> com.continusec.verifiabledatastructures.api.LogRef
	3,  // 7: com.continusec.verifiabledatastructures.api.LogConsistencyProofRequest.log:type_name -> com.continusec.verifiabledatastructures.api.LogRef
	1,  // 8: com.continusec.verifiabledatastructures.api.LeafData.format:type_name -> com.continusec.verifiabledatastructures.api.DataFormat
	3,  // 9: com.continusec.verifiabledatastructures.api.LogAddEntryRequest.log:type_name -> com.continusec.verifiabledatastructures.api.LogRef
	13, // 10: com.continusec.verifiabledatastructures.api.LogAddEntryRequest.value:type_name -> com.continusec.verifiabledatastructures.api.LeafData
	4,  // 11: com.continusec.verifiabledatastructures.api.MapSetValueRequest.map:type_name -> com.continusec.verifiabledatastructures.api.MapRef
	22, // 12: com.continusec.verifiabledatastructures.api.MapSetValueRequest.mutation:type_name -> com.continusec.verifiabledatastructures.api.MapMutation
	4,  // 13: com.continusec.verifiabledatastructures.api.MapGetValueRequest.map:type_name -> com.continusec.verifiabledatastructures.api.MapRef
	13, // 14: com.continusec.verifiabledatastructures.api.MapGetValueResponse.value:type_name -> com.continusec.verifiabledatastructures.api.LeafData
	3,  // 15: com.continusec.verifiabledatastructures.api.LogFetchEntriesRequest.log:type_name -> com.continusec.verifiabledatastructures.api.LogRef
	13, // 16: com.continusec.verifiabledatastructures.api.LogFetchEntriesResponse.values:type_name -> com.continusec.verifiabledatastructures.api.LeafData
	13, // 17: com.continusec.verifiabledatastructures.api.MapMutation.value:type_name -> com.continusec.verifiabledatastructures.api.LeafData
	14, // 18: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogAddEntry:input_type -> com.continusec.verifiabledatastructures.api.LogAddEntryRequest
	20, // 19: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogFetchEntries:input_type -> com.continusec.verifiabledatastructures.api.LogFetchEntriesRequest
	5,  // 20: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogTreeHash:input_type -> com.continusec.verifiabledatastructures.api.LogTreeHashRequest
	9,  // 21: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogInclusionProof:input_type -> com.continusec.verifiabledatastructures.api.LogInclusionProofRequest
	11, // 22: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogConsistencyProof:input_type -> com.continusec.verifiabledatastructures.api.LogConsistencyProofRequest
	16, // 23: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapSetValue:input_type -> com.continusec.verifiabledatastructures.api.MapSetValueRequest
	18, // 24: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapGetValue:input_type -> com.continusec.verifiabledatastructures.api.MapGetValueRequest
	7,  // 25: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapTreeHash:input_type -> com.continusec.verifiabledatastructures.api.MapTreeHashRequest
	15, // 26: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogAddEntry:output_type -> com.continusec.verifiabledatastructures.api.LogAddEntryResponse
	21, // 27: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogFetchEntries:output_type -> com.continusec.verifiabledatastructures.api.LogFetchEntriesResponse
	6,  // 28: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogTreeHash:output_type -> com.continusec.verifiabledatastructures.api.LogTreeHashResponse
	10, // 29: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogInclusionProof:output_type -> com.continusec.verifiabledatastructures.api.LogInclusionProofResponse
	12, // 30: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.LogConsistencyProof:output_type -> com.continusec.verifiabledatastructures.api.LogConsistencyProofResponse
	17, // 31: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapSetValue:output_type -> com.continusec.verifiabledatastructures.api.MapSetValueResponse
	19, // 32: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapGetValue:output_type -> com.continusec.verifiabledatastructures.api.MapGetValueResponse
	8,  // 33: com.continusec.verifiabledatastructures.api.VerifiableDataStructuresService.MapTreeHash:output_type -> com.continusec.verifiabledatastructures.api.MapTreeHashResponse
	26, // [26:34] is the sub-list for method output_type
	18, // [18:26] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
